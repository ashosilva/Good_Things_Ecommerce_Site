{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, productDetailsReducer, productReducer, newProductReducer, newReviewReducer } from './reducers/productReducers';\nimport { authReducer, userReducer, forgotPasswordReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { newOrderReducer, myOrdersReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  product: productReducer,\n  newProduct: newProductReducer,\n  auth: authReducer,\n  user: userReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  newReview: newReviewReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\n  }\n};\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)));\nexport default store;","map":{"version":3,"sources":["/Users/a.b.a/Desktop/CSC_430 SOFTWARE ENGINEERING/Good_Things_Ecommerce_Site/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","productDetailsReducer","productReducer","newProductReducer","newReviewReducer","authReducer","userReducer","forgotPasswordReducer","cartReducer","newOrderReducer","myOrdersReducer","reducer","products","productDetails","product","newProduct","auth","user","forgotPassword","cart","newOrder","myOrders","newReview","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middlware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,eAAT,EAA0BC,qBAA1B,EAAiDC,cAAjD,EAAiEC,iBAAjE,EAAoFC,gBAApF,QAA4G,4BAA5G;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,qBAAnC,QAAgE,yBAAhE;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,0BAAjD;AAGA,MAAMC,OAAO,GAAGf,eAAe,CAAC;AAC5BgB,EAAAA,QAAQ,EAAEZ,eADkB;AAE5Ba,EAAAA,cAAc,EAAEZ,qBAFY;AAG5Ba,EAAAA,OAAO,EAAEZ,cAHmB;AAI5Ba,EAAAA,UAAU,EAAEZ,iBAJgB;AAK5Ba,EAAAA,IAAI,EAAEX,WALsB;AAM5BY,EAAAA,IAAI,EAAEX,WANsB;AAO5BY,EAAAA,cAAc,EAAEX,qBAPY;AAQ5BY,EAAAA,IAAI,EAAEX,WARsB;AAS5BY,EAAAA,QAAQ,EAAEX,eATkB;AAU5BY,EAAAA,QAAQ,EAAEX,eAVkB;AAW5BY,EAAAA,SAAS,EAAElB;AAXiB,CAAD,CAA/B;AAgBA,IAAImB,YAAY,GAAG;AACfJ,EAAAA,IAAI,EAAE;AACFK,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACLC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADK,GAEL,EAHJ;AAIFG,IAAAA,YAAY,EAAEJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADQ,GAER;AANJ;AADS,CAAnB;AAWA,MAAMI,SAAS,GAAG,CAAChC,KAAD,CAAlB;AACA,MAAMiC,KAAK,GAAGpC,WAAW,CAACgB,OAAD,EAAUY,YAAV,EAAwBxB,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,SAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { productsReducer, productDetailsReducer, productReducer, newProductReducer, newReviewReducer } from './reducers/productReducers'\nimport { authReducer, userReducer, forgotPasswordReducer } from './reducers/userReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { newOrderReducer, myOrdersReducer } from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n    products: productsReducer,\n    productDetails: productDetailsReducer,\n    product: productReducer,\n    newProduct: newProductReducer,\n    auth: authReducer,\n    user: userReducer,\n    forgotPassword: forgotPasswordReducer,\n    cart: cartReducer,\n    newOrder: newOrderReducer,\n    myOrders: myOrdersReducer,\n    newReview: newReviewReducer\n\n})\n\n\nlet initialState = {\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n            ? JSON.parse(localStorage.getItem('cartItems'))\n            : [],\n        shippingInfo: localStorage.getItem('shippingInfo')\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\n            : {}\n    }\n}\n\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\n\nexport default store;"]},"metadata":{},"sourceType":"module"}