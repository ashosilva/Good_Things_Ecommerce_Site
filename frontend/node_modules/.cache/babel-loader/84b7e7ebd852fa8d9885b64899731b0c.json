{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAIL, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_FAIL, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAIL, NEW_PASSWORD_REQUEST, NEW_PASSWORD_SUCCESS, NEW_PASSWORD_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, CLEAR_ERRORS } from '../constants/userConstants';\n\n// Login\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Logout user\nexport const logout = () => async dispatch => {\n  try {\n    await axios.get('/api/v1/logout');\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Register user\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/register', userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Load user\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/me');\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Update profile\nexport const updateProfile = userData => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/v1/me/update', userData, config);\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Update password\nexport const updatePassword = passwords => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/v1/password/update', passwords, config);\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Forgot password\nexport const forgotPassword = email => async dispatch => {\n  try {\n    dispatch({\n      type: FORGOT_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/password/forgot', email, config);\n    dispatch({\n      type: FORGOT_PASSWORD_SUCCESS,\n      payload: data.message\n    });\n  } catch (error) {\n    dispatch({\n      type: FORGOT_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Reset password\nexport const resetPassword = (token, passwords) => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config);\n    dispatch({\n      type: NEW_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Clear Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","login","email","password","dispatch","type","config","headers","data","post","payload","user","error","response","message","logout","get","register","userData","loadUser","updateProfile","put","success","updatePassword","passwords","forgotPassword","resetPassword","token","clearErrors"],"sources":["/Users/a.b.a/Desktop/CSC_430 SOFTWARE ENGINEERING/Good_Things_Ecommerce_Site/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios'\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOGIN_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Logout user\nexport const logout = () => async (dispatch) => {\n    try {\n\n        await axios.get('/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Register user\nexport const register = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGISTER_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Load user\nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOAD_USER_REQUEST })\n\n        const { data } = await axios.get('/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update profile\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update password\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n// Forgot password\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Reset password\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PASSWORD_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}